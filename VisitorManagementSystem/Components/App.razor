<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="/" />
    
    <link rel="stylesheet" href="css/bootstrap.min.css" />
    <link rel="stylesheet" href="css/sidebars.css" />
   
    <link rel="stylesheet" href="app.css" />
    <link rel="stylesheet" href="VisitorManagementSystem.styles.css" />
    <link rel="icon" type="image/png" href="RehlkoLogo/rehlkofavikon.png" />

    
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <link href="https://use.fontawesome.com/releases/v5.7.2/css/all.css" rel="stylesheet">
   

    <HeadOutlet />
</head>

<body>
    <Routes/>
    <script src="_framework/blazor.web.js"></script>
    <script src="js/sidebars.js"></script>
    <script src="js/bootstrap.bundle.min.js"></script>
    <script src="js/qr-scanner.umd.min.js"></script>
    <script src="js/qrHelper.js"></script>
    <script src="js/qrious.min.js"></script>
    <script src="_content/BlazorInputFile/inputfile.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="/home.js"></script>
    

   
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels"></script>
    <script src="https://cdn.jsdelivr.net/npm/jsqr@1.4.0/dist/jsQR.js"></script>

    <script src="webcam.js"></script>

    <script type="text/javascript">
        function startVideo(src) {
            if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {
                navigator.mediaDevices.getUserMedia({ video: true }).then(function (stream) {
                    let video = document.getElementById(src);
                    if ("srcObject" in video) {
                        video.srcObject = stream;
                    } else {
                        video.src = window.URL.createObjectURL(stream);
                    }
                    video.onloadedmetadata = function (e) {
                        video.play();
                    };
                    //mirror image
                    video.style.webkitTransform = "scaleX(-1)";
                    video.style.transform = "scaleX(-1)";
                });
            }
        }

        function getFrame(src, dest, dotNetHelper) {
            let video = document.getElementById(src);
            let canvas = document.getElementById(dest);
            canvas.getContext('2d').drawImage(video, 0, 0, 240, 240);

            let dataUrl = canvas.toDataURL("image/jpeg");
            dotNetHelper.invokeMethodAsync('ProcessImage', dataUrl);
        }

        function stopVideo(src) {
            let video = document.getElementById(src);
            if (video && "srcObject" in video) {
                const stream = video.srcObject;
                if (stream) {
                    const tracks = stream.getTracks();
                    tracks.forEach(track => track.stop());
                }
                video.srcObject = null;
            }
        }

        function startToastMsg() {
            $(".toast").toast('show');
        }


            
        
    

    </script>
    



</body>

</html>



